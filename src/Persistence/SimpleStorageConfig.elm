module Persistence.SimpleStorageConfig exposing (StorageConfig(..), decoder, encode, toStorage)

import Dropbox
import Json.Decode as Decode
import Json.Encode as Encode
import Storage exposing (Storage)
import Storage.Dropbox


type StorageConfig
    = Dropbox Dropbox.UserAuth


toStorage : StorageConfig -> Storage
toStorage config =
    case config of
        Dropbox auth ->
            Storage.Dropbox.storage auth


decoder : Decode.Decoder StorageConfig
decoder =
    Decode.field "type" Decode.string
        |> Decode.andThen
            (\t ->
                case t of
                    "dropbox" ->
                        Decode.field "authToken" Dropbox.decodeUserAuth
                            |> Decode.map Dropbox

                    _ ->
                        Decode.fail ("Got an unknown type: " ++ Debug.toString t)
            )


{-| WARNING: the resulting JSON will potentially contain authentication
credentials for your user.
Be careful with the resulting value
and handle it securely.
The credentials can be regenerated by the user,
so it is safe for the user to be able to find the credentials,
but they should be they should be protected from eavesdroppers
and should not be sent outside of the user's own device
(for example, you should not send this information to your own server
-- if you need that, you should look at other authentication strategies
and not use implicit grant).
-}
encode : StorageConfig -> Encode.Value
encode config =
    case config of
        Dropbox auth ->
            Encode.object
                [ ( "type", Encode.string "dropbox" )
                , ( "authToken", Dropbox.encodeUserAuth auth )
                ]
